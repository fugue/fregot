[mock_input object{"exposed": array{
  0: object{
    "interface": string,
    "port": number
  },
  1: object{
    "interface": string,
    "port": number
  },
  2: object{
    "interface": string,
    "port": number
  },
  3: object{
    "interface": string,
    "port": number
  }
}}]
mock_input = {"exposed": [
  {
    "port": 8080,
    "interface": "eth0"
  },
  {
    "port": 8081,
    "interface": "eth0"
  },
  {
    "port": 443,
    "interface": "eth1"
  },
  {
    "port": 5000,
    "interface": "lo1"
  }
]}
[exposed_ports_by_interface object{string: array{number: number}}]
exposed_ports_by_interface [intf] = ports {
  intf := comprehension_index.mock_input."exposed".i."interface"
  [index intf] ports := [port |
    comprehension_index.mock_input."exposed".j."interface" = intf
    port := comprehension_index.mock_input."exposed".j."port"
  ]
}
[deny set{string} bottom-up]
deny [msg] {
  >(count(comprehension_index.exposed_ports_by_interface.i), 1)
  msg := sprintf("interface '%v' exposes too many ports", [i])
}
[test_deny boolean]
test_deny {
  comprehension_index.deny."interface 'eth0' exposes too many ports" with input. as comprehension_index.mock_input
}
